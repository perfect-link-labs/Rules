name: Sync Rules

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 1 * * *"

  push:
    paths:
      - ".github/workflows/sync-rules.yml"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare clean branch (keep workflow only)
        run: |
          set -euo pipefail
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Action"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          BRANCH="${GITHUB_REF_NAME:-}"
          if [ -z "$BRANCH" ]; then
            BRANCH="$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')"
          fi
          if [ -z "$BRANCH" ]; then
            BRANCH="main"
          fi
          echo "Target branch: $BRANCH"

          NEW_BRANCH="temp-sync-$(date -u +%s)"
          git switch -c "$NEW_BRANCH"

          find . -mindepth 1 -maxdepth 1 \
            ! -path "./.git" \
            ! -path "./.github" \
            -exec rm -rf {} +

          mkdir -p .github/workflows
          test -f .github/workflows/sync-rules.yml || {
            echo "Error: workflow file missing after cleanup" >&2; exit 1; }

      - name: Checkout upstream dler-io Rules (sparse)
        uses: actions/checkout@v4
        with:
          repository: dler-io/Rules
          ref: main
          path: upstream_dler
          fetch-depth: 1
          sparse-checkout: |
            Clash/Provider
            Surge/Surge 3/Provider
          sparse-checkout-cone: true

      - name: Checkout upstream GeQ1an Rules (sparse)
        uses: actions/checkout@v4
        with:
          repository: GeQ1an/Rules
          ref: master
          path: upstream_geq
          fetch-depth: 1
          sparse-checkout: |
            QuantumultX
          sparse-checkout-cone: true

      - name: Checkout upstream MetaCubeX meta-rules-dat (sparse)
        uses: actions/checkout@v4
        with:
          repository: MetaCubeX/meta-rules-dat
          ref: sing
          path: upstream_meta
          fetch-depth: 1
          sparse-checkout: |
            geo
          sparse-checkout-cone: true

      - name: Checkout upstream VirgilClyne GetSomeFries (sparse)
        uses: actions/checkout@v4
        with:
          repository: VirgilClyne/GetSomeFries
          ref: main
          path: upstream_fries
          fetch-depth: 1
          sparse-checkout: |
            ruleset
          sparse-checkout-cone: true

      - name: Rewrite Clash only Provider (dler-io to Clash)
        run: |
          set -euo pipefail
          if [ -d "upstream_dler/Clash/Provider" ]; then
            mkdir -p "Clash"
            rsync -a --delete "upstream_dler/Clash/Provider/" "Clash/"
          else
            echo "Warning: upstream dler-io Clash/Provider not found" >&2
          fi

      - name: Rewrite Surge only Surge 3 Provider (dler-io to Surge)
        run: |
          set -euo pipefail
          if [ -d "upstream_dler/Surge/Surge 3/Provider" ]; then
            mkdir -p "Surge"
            rsync -a --delete "upstream_dler/Surge/Surge 3/Provider/" "Surge/"
          else
            echo "Warning: upstream dler-io Surge/Surge 3/Provider not found" >&2
          fi

      - name: Sync QuantumultX from GeQ1an Rules
        run: |
          set -euo pipefail
          if [ -d "upstream_geq/QuantumultX" ]; then
            mkdir -p "QuantumultX"
            rsync -a --delete "upstream_geq/QuantumultX/" "QuantumultX/"
          else
            echo "Warning: upstream GeQ1an QuantumultX not found" >&2
          fi

      - name: Sync geo from MetaCubeX meta-rules-dat (to geo at repo root)
        run: |
          set -euo pipefail
          if [ -d "upstream_meta/geo" ]; then
            mkdir -p "geo"
            rsync -a --delete "upstream_meta/geo/" "geo/"
          else
            echo "Error: upstream meta-rules-dat 'geo' dir not found" >&2
            exit 1
          fi

      - name: Sync ruleset from VirgilClyne GetSomeFries (to ruleset at repo root)
        run: |
          set -euo pipefail
          if [ -d "upstream_fries/ruleset" ]; then
            mkdir -p "ruleset"
            rsync -a --delete "upstream_fries/ruleset/" "ruleset/"
          else
            echo "Error: upstream GetSomeFries 'ruleset' dir not found" >&2
            exit 1
          fi

      - name: Commit and push
        run: |
          set -euo pipefail
          git add .github/workflows/sync-rules.yml Clash Surge QuantumultX geo ruleset || true

          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit." > /dev/stderr
            exit 0
          fi

          git commit -m "ðŸ”„ chore(sync) $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push --set-upstream origin "$(git branch --show-current)" || true

          BRANCH="${GITHUB_REF_NAME:-main}"
          if [ "$BRANCH" != "$(git branch --show-current)" ]; then
            git fetch origin "$BRANCH" || true
            git checkout "$BRANCH" || true
            git merge --ff-only "$(git for-each-ref --format='%(refname:short)' | grep '^temp-sync-' | tail -n1)" || true
            git push || true
          fi
